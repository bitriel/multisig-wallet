{
  "address": "0x4b7988C75a1C410AfC793870C26FB10ae1A91d6b",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "ApprovalRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "threshold",
          "type": "uint8"
        }
      ],
      "name": "ChangedThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "ExecutionFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "TransactionApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "TransactionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "TransactionSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_OWNER",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_threshold",
          "type": "uint8"
        }
      ],
      "name": "addOwnerWithThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txnId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_threshold",
          "type": "uint8"
        }
      ],
      "name": "changeThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "checkOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txnId",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txnId",
          "type": "uint256"
        }
      ],
      "name": "getApprovalCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "count",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pending",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_executed",
          "type": "bool"
        }
      ],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint8",
          "name": "_required",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txnId",
          "type": "uint256"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txnId",
          "type": "uint256"
        }
      ],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Types.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "txnId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "enum Types.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "approval",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x06b6ec5c3f2bd44e81e841953dfc64c03eda85454aca2595e315c66aaa56b493",
  "receipt": {
    "to": null,
    "from": "0x4861a4D127A206Af02f427aF515286E2FD3D7B03",
    "contractAddress": "0x4b7988C75a1C410AfC793870C26FB10ae1A91d6b",
    "transactionIndex": 199,
    "gasUsed": "1883358",
    "logsBloom": "0x
    "blockHash": "0x2288ee29fa1fede79390cc550a5e6d544517e2f13cdc28556a933d040c44bce4",
    "transactionHash": "0x06b6ec5c3f2bd44e81e841953dfc64c03eda85454aca2595e315c66aaa56b493",
    "logs": [],
    "blockNumber": 15325394,
    "cumulativeGasUsed": "33356947",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "cf1e16f7f9a4e341d478dbc8043f5301",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"ApprovalRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"ChangedThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_OWNER\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_threshold\",\"type\":\"uint8\"}],\"name\":\"addOwnerWithThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txnId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_threshold\",\"type\":\"uint8\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"checkOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txnId\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txnId\",\"type\":\"uint256\"}],\"name\":\"getApprovalCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"count\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pending\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_executed\",\"type\":\"bool\"}],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"_required\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txnId\",\"type\":\"uint256\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txnId\",\"type\":\"uint256\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Types.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txnId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"enum Types.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"approval\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(uint256)\":{\"details\":\"Allows an owner to approve a transaction.\",\"params\":{\"_txnId\":\"transaction ID.\"}},\"executeTransaction(uint256)\":{\"details\":\"Allows anyone to execute a approved transaction.\",\"params\":{\"_txnId\":\"transaction ID.\"},\"returns\":{\"success\":\"wether it's success\"}},\"getApprovalCount(uint256)\":{\"details\":\"Returns number of approvals of a transaction.\",\"params\":{\"_txnId\":\"transaction ID.\"},\"returns\":{\"count\":\"Number of approvals.\"}},\"getTransactionCount(bool,bool)\":{\"details\":\"Returns total number of transactions which filers are applied.\",\"params\":{\"_executed\":\"Include executed transactions.\",\"_pending\":\"Include pending transactions.\"},\"returns\":{\"count\":\"Total number of transactions after filters are applied.\"}},\"initialize(address[],uint8)\":{\"details\":\"sets initial owners and required number of confirmations.\",\"params\":{\"_owners\":\"List of initial owners.\",\"_required\":\"Number of required confirmations.\"}},\"isConfirmed(uint256)\":{\"details\":\"Returns the confirmation status of a transaction.\",\"params\":{\"_txnId\":\"transaction ID.\"},\"returns\":{\"status\":\"confirmation status.\"}},\"revokeApproval(uint256)\":{\"details\":\"Allows an owner to revoke a approval for a transaction.\",\"params\":{\"_txnId\":\"transaction ID.\"}},\"submitTransaction(uint8,address,uint256,bytes)\":{\"details\":\"Allows an owner to submit and approve a transaction.\",\"params\":{\"data\":\"transaction data payload.\",\"operation\":\"external call operation\",\"target\":\"transaction destination address\",\"value\":\"transaction value in Wei.\"},\"returns\":{\"txnId\":\"returns transaction ID.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Multisignature wallet - Allows multiple parties to agree on transactions before execution.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x94dd781aa290742d990ccb720b3cab52a3865d1ba004e35c1dc757aa3ee788e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\\n *\\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\\n * contract implement this interface (contract holders can be their own\\n * implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Recipient {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever tokens are being\\n     * moved or created into a registered account (`to`). The type of operation\\n     * is conveyed by `from` being the zero address or not.\\n     *\\n     * This call occurs _after_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/MultiSigWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"./utils/Types.sol\\\";\\nimport \\\"./base/OwnerManager.sol\\\";\\nimport \\\"./base/Executor.sol\\\";\\nimport \\\"./handler/TokensHandler.sol\\\";\\n\\n/// @title Multisignature wallet - Allows multiple parties to agree on transactions before execution.\\ncontract MultiSigWallet is OwnerManager, Executor, TokensHandler, Initializable {\\n  event Received(address indexed sender, uint256 value);\\n  event TransactionApproved(address indexed sender, uint256 indexed transactionId);\\n  event ApprovalRevoked(address indexed sender, uint256 indexed transactionId);\\n  event TransactionSubmitted(uint256 indexed transactionId);\\n  event TransactionExecuted(uint256 indexed transactionId);\\n  event ExecutionFailed(uint256 indexed transactionId);\\n\\n  struct Transaction {\\n    Types.Operation operation;\\n    address target;\\n    uint256 value;\\n    bytes data;\\n    uint8 approval;\\n    bool executed;\\n  }\\n\\n  uint8 constant public MAX_OWNER = 50;\\n\\n  mapping (uint256 => Transaction) public transactions;\\n  mapping (uint256 => mapping (address => bool)) public approvals;\\n  uint256 public transactionCount;\\n\\n  /// @dev sets initial owners and required number of confirmations.\\n  /// @param _owners List of initial owners.\\n  /// @param _required Number of required confirmations.\\n  function initialize(address[] memory _owners, uint8 _required) public initializer {\\n    setupOwners(_owners, _required);\\n  }\\n\\n  /// @dev deposit native token into this contract.\\n  receive() external payable {\\n    emit Received(msg.sender, msg.value);\\n  }\\n\\n  /// @dev Allows an owner to submit and approve a transaction.\\n  /// @param operation external call operation\\n  /// @param target transaction destination address\\n  /// @param value transaction value in Wei.\\n  /// @param data transaction data payload.\\n  /// @return txnId returns transaction ID.\\n  function submitTransaction(\\n    Types.Operation operation, \\n    address target, \\n    uint256 value, \\n    bytes memory data\\n  ) public returns (uint256 txnId) \\n  {\\n    txnId = _addTransaction(operation, target, value, data);\\n    approve(txnId);\\n  }\\n\\n  /// @dev Allows an owner to approve a transaction.\\n  /// @param _txnId transaction ID.\\n  function approve(uint256 _txnId) public\\n    isOwner(msg.sender)\\n    hasTransaction(_txnId)\\n    notApproved(_txnId, msg.sender)\\n  {\\n    transactions[_txnId].approval++;\\n    approvals[_txnId][msg.sender] = true;\\n\\n    emit TransactionApproved(msg.sender, _txnId);\\n    executeTransaction(_txnId);\\n  }\\n\\n  /// @dev Allows an owner to revoke a approval for a transaction.\\n  /// @param _txnId transaction ID.\\n  function revokeApproval(uint256 _txnId) external\\n    isOwner(msg.sender)\\n    approved(_txnId, msg.sender)\\n    notExecuted(_txnId)\\n  {\\n    transactions[_txnId].approval--;\\n    approvals[_txnId][msg.sender] = false;\\n    \\n    emit ApprovalRevoked(msg.sender, _txnId);\\n  }\\n\\n  /// @dev Allows anyone to execute a approved transaction.\\n  /// @param _txnId transaction ID.\\n  /// @return success wether it's success\\n  function executeTransaction(uint256 _txnId) public\\n    isOwner(msg.sender)\\n    approved(_txnId, msg.sender)\\n    notExecuted(_txnId)\\n    returns (bool success)\\n  {\\n    if (isConfirmed(_txnId)) {\\n      Transaction storage txn = transactions[_txnId];\\n      success = execute(txn.operation, txn.target, txn.value, txn.data, (gasleft() - 2500));\\n      if (success) {\\n        txn.executed = true;\\n        emit TransactionExecuted(_txnId);\\n      } else {\\n        txn.executed = false;\\n        emit ExecutionFailed(_txnId);\\n      }\\n    }\\n  }\\n\\n  /// @dev Returns the confirmation status of a transaction.\\n  /// @param _txnId transaction ID.\\n  /// @return status confirmation status.\\n  function isConfirmed(uint _txnId) public view returns (bool status) {\\n    status = transactions[_txnId].approval >= getThreshold();\\n  }\\n\\n  /// @dev Adds a new transaction to the transaction mapping, if transaction does not exist yet.\\n  /// @param operation external call operation\\n  /// @param target transaction destination address\\n  /// @param value transaction value in Wei.\\n  /// @param data transaction data payload.\\n  /// @return txnId returns transaction ID.\\n  function _addTransaction(\\n    Types.Operation operation, \\n    address target, \\n    uint256 value, \\n    bytes memory data\\n  ) internal\\n    isValid(target)\\n    returns (uint txnId)\\n  {\\n    txnId = transactionCount++;\\n    transactions[txnId] = Transaction({\\n      operation: operation,\\n      target: target,\\n      value: value,\\n      data: data,\\n      approval: 0,\\n      executed: false\\n    });\\n    \\n    emit TransactionSubmitted(txnId);\\n  }\\n\\n  /// @dev Returns number of approvals of a transaction.\\n  /// @param _txnId transaction ID.\\n  /// @return count Number of approvals.\\n  function getApprovalCount(uint _txnId) external view returns (uint8 count) {\\n    count = transactions[_txnId].approval;\\n  }\\n\\n  /// @dev Returns total number of transactions which filers are applied.\\n  /// @param _pending Include pending transactions.\\n  /// @param _executed Include executed transactions.\\n  /// @return count Total number of transactions after filters are applied.\\n  function getTransactionCount(bool _pending, bool _executed) external view returns (uint256 count)\\n  {\\n    for (uint256 i=0; i<transactionCount; i++)\\n      if (_pending && !transactions[i].executed || _executed && transactions[i].executed)\\n        count++;\\n  }\\n\\n  modifier hasTransaction(uint256 _txnId) {\\n    require(_txnId < transactionCount, \\\"transaction is not exist\\\");\\n    _;\\n  }\\n\\n  modifier approved(uint256 _txnId, address _owner) {\\n    require(approvals[_txnId][_owner], \\\"not been approved by this owner\\\");\\n    _;\\n  }\\n\\n  modifier notApproved(uint256 _txnId, address _owner) {\\n    require(!approvals[_txnId][_owner], \\\"has been approved by this owner\\\");\\n    _;\\n  }\\n\\n  modifier notExecuted(uint256 _txnId) {\\n    require(!transactions[_txnId].executed, \\\"transaction is executed\\\");\\n    _;\\n  }\\n\\n  modifier isValid(address _address) {\\n    require(_address != address(0), \\\"this address is zero address\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0d1d5da79123fbd759d4e4040ae7caf22578a413febaeb4bdee8186e5630d0da\",\"license\":\"GPL-3.0\"},\"contracts/base/Executor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"../utils/Types.sol\\\";\\n\\nabstract contract Executor {\\n  function execute(\\n    Types.Operation operation,\\n    address target,\\n    uint256 value,\\n    bytes memory data,\\n    uint256 txGas\\n  ) internal returns (bool success) {\\n    if(operation == Types.Operation.Call) {\\n      // solhint-disable-next-line no-inline-assembly\\n      assembly {\\n        success := call(txGas, target, value, add(data, 0x20), mload(data), 0, 0)\\n      }\\n    } else {\\n      // solhint-disable-next-line no-inline-assembly\\n      assembly {\\n        success :=delegatecall(txGas, target, add(data, 0x20), mload(data), 0, 0)\\n      }\\n    }\\n  }\\n}\",\"keccak256\":\"0xc384ab01550a10f345b7146e7a37190a6150687db1672c22fc6de74df3d26391\",\"license\":\"GPL-3.0\"},\"contracts/base/OwnerManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"../utils/SelfAuthorized.sol\\\";\\n\\nabstract contract OwnerManager is SelfAuthorized {\\n  event AddedOwner(address owner);\\n  event RemovedOwner(address owner);\\n  event ChangedThreshold(uint8 threshold);\\n\\n  address internal constant SENTINEL_OWNERS = address(0x1);\\n  mapping(address => address) internal owners;\\n  uint256 internal ownerCount;\\n  uint8 internal threshold;\\n\\n  function setupOwners(address[] memory _owners, uint8 _threshold) internal {\\n    require(threshold == 0, \\\"can only be called once\\\");\\n    require(_threshold <= _owners.length, \\\"threshold is more than owners\\\");\\n    require(_threshold >= 1, \\\"at least one owner\\\");\\n    address currentOwner = SENTINEL_OWNERS;\\n    for(uint i=0; i<_owners.length; i++) {\\n      address owner = _owners[i];\\n      require(owner != address(0) && owner != address(this) && owner != currentOwner && owner != SENTINEL_OWNERS, \\\"not allowed owner address\\\");\\n      require(owners[owner] == address(0), \\\"duplicate owner address\\\");\\n      owners[currentOwner] = owner;\\n      currentOwner = owner;\\n    }\\n    owners[currentOwner] = SENTINEL_OWNERS;\\n    ownerCount = _owners.length;\\n    threshold = _threshold;\\n  } \\n\\n  function addOwnerWithThreshold(address owner, uint8 _threshold) public authorized {\\n    require(owner != address(0) && owner != address(this) && owner != SENTINEL_OWNERS, \\\"not allowed owner address\\\");\\n    require(owners[owner] == address(0), \\\"duplicate owner address\\\");\\n    owners[owner] = owners[SENTINEL_OWNERS];\\n    owners[SENTINEL_OWNERS] = owner;\\n    ownerCount++;\\n    emit AddedOwner(owner);\\n\\n    if(threshold != _threshold) changeThreshold(_threshold);\\n  }\\n\\n  function removeOwnerWithThreshold(address prevOwner, address owner, uint8 _threshold) internal authorized {\\n    require(ownerCount - 1 >= _threshold, \\\"threshold can not be reached\\\");\\n    require(owner != address(0) && owner != SENTINEL_OWNERS, \\\"invalid owner address\\\");\\n    require(owners[prevOwner] == owner, \\\"not correspond to the owner\\\");\\n    owners[prevOwner] = owners[owner];\\n    owners[owner] = address(0);\\n    ownerCount--;\\n    emit RemovedOwner(owner);\\n\\n    if(threshold != _threshold) changeThreshold(_threshold);\\n  }\\n\\n  function swapOwner(address prevOwner, address oldOwner, address newOwner) public authorized {\\n    require(newOwner != address(0) && newOwner != address(this) && newOwner != SENTINEL_OWNERS, \\\"invalid new owner address\\\");\\n    require(owners[newOwner] == address(0), \\\"duplicate owner address\\\");\\n    require(oldOwner != address(0) && oldOwner != SENTINEL_OWNERS, \\\"invalid old owner address\\\");\\n    require(owners[prevOwner] == oldOwner, \\\"not correspond to the oldOwner\\\");\\n    owners[newOwner] = owners[oldOwner];\\n    owners[prevOwner] = newOwner;\\n    owners[oldOwner] = address(0);\\n    emit RemovedOwner(oldOwner);\\n    emit AddedOwner(newOwner);\\n  }\\n\\n  function changeThreshold(uint8 _threshold) public authorized {\\n    require(_threshold <= ownerCount, \\\"threshold is more than owners\\\");\\n    require(_threshold >= 1, \\\"at least one owner\\\");\\n    threshold = _threshold;\\n    emit ChangedThreshold(_threshold);\\n  }\\n\\n  function getThreshold() public view returns (uint8) {\\n    return threshold;\\n  }\\n\\n  function checkOwner(address owner) public view returns (bool) {\\n    return owner != SENTINEL_OWNERS && owners[owner] != address(0);\\n  }\\n\\n  function getOwners() public view returns (address[] memory) {\\n    address[] memory _owners = new address[](ownerCount);\\n\\n    address currentOwner = owners[SENTINEL_OWNERS];\\n    for(uint i=0; i<ownerCount; i++) {\\n      _owners[i] = currentOwner;\\n      currentOwner = owners[currentOwner];\\n    }\\n    return _owners;\\n  }\\n\\n  modifier notOwner(address _owner) {\\n    require(!checkOwner(_owner), \\\"is one of the owners\\\");\\n    _;\\n  }\\n\\n  modifier isOwner(address _owner) {\\n    require(checkOwner(_owner), \\\"is not one of the owners\\\");\\n    _;\\n  }\\n}\",\"keccak256\":\"0x9e02bfb39486bdb9a4cc3fa8c506a69d0ed090d84669d2ad8e2360b348483154\",\"license\":\"GPL-3.0\"},\"contracts/handler/TokensHandler.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\\\";\\n\\nabstract contract TokensHandler is IERC165, IERC1155Receiver, IERC721Receiver, IERC777Recipient {\\n  function onERC1155Received(\\n    address,\\n    address,\\n    uint256,\\n    uint256,\\n    bytes calldata\\n  ) external pure override returns (bytes4) {\\n    return 0xf23a6e61;\\n  }\\n\\n  function onERC1155BatchReceived(\\n    address,\\n    address,\\n    uint256[] calldata,\\n    uint256[] calldata,\\n    bytes calldata\\n  ) external pure override returns (bytes4) {\\n    return 0xbc197c81;\\n  }\\n\\n  function onERC721Received(\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata\\n  ) external pure override returns (bytes4) {\\n    return 0x150b7a02;\\n  }\\n\\n  // solhint-disable no-empty-blocks\\n  function tokensReceived(\\n    address,\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata,\\n    bytes calldata\\n  ) external pure override {\\n    // We implement this for completeness, doesn't really have any value\\n  }\\n\\n  function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\\n    return\\n      interfaceId == type(IERC1155Receiver).interfaceId ||\\n      interfaceId == type(IERC721Receiver).interfaceId ||\\n      interfaceId == type(IERC165).interfaceId;\\n  }\\n}\",\"keccak256\":\"0xd5c884d83811e412ace040f85d4830a8bb83c57c8b16aa3adc5d294ae2f79b58\",\"license\":\"GPL-3.0\"},\"contracts/utils/SelfAuthorized.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\n\\nabstract contract SelfAuthorized {\\n  function _selfCall() private view {\\n    require(msg.sender == address(this), \\\"required self call\\\");\\n  }\\n\\n  modifier authorized() {\\n    _selfCall();\\n    _;\\n  }\\n}\",\"keccak256\":\"0xf429759512facbb8bf895cb570afcc6560dc170276c9dee6774d818d738c0461\",\"license\":\"GPL-3.0\"},\"contracts/utils/Types.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\n\\ncontract Types {\\n  enum Operation {Call, DelegateCall}\\n}\",\"keccak256\":\"0x154da3b303402876d1ebcaba13ed8593cdfad00b89e4327036bcd37e92111cfe\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061211d806100206000396000f3fe6080604052600436106101435760003560e01c8063b1e130fc116100b6578063bc197c811161006f578063bc197c8114610427578063e0e3671c14610456578063e318b52b14610476578063e75235b814610496578063ee22610b146104ae578063f23a6e61146104ce57600080fd5b8063b1e130fc1461035d578063b759f9541461037d578063b77bf6001461039d578063b7f3358d146103b3578063b91a667f146103d3578063ba7e7cab146103f357600080fd5b806372688111116101085780637268811114610267578063784547a71461028e5780638dbcc2e0146102ae5780639ace38c2146102ce578063a0e67e2b14610300578063ab2850da1461032257600080fd5b806223de291461018457806301ffc9a7146101ab578063150b7a02146101e05780632bbdea4e14610219578063547415251461023957600080fd5b3661017f5760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b34801561019057600080fd5b506101a961019f366004611a08565b5050505050505050565b005b3480156101b757600080fd5b506101cb6101c6366004611d45565b6104fb565b60405190151581526020015b60405180910390f35b3480156101ec57600080fd5b506102006101fb366004611b46565b61054d565b6040516001600160e01b031990911681526020016101d7565b34801561022557600080fd5b506101a9610234366004611c5b565b61055f565b34801561024557600080fd5b50610259610254366004611d1c565b610633565b6040519081526020016101d7565b34801561027357600080fd5b5061027c603281565b60405160ff90911681526020016101d7565b34801561029a57600080fd5b506101cb6102a9366004611e2a565b6106bc565b3480156102ba57600080fd5b506102596102c9366004611d6d565b6106f0565b3480156102da57600080fd5b506102ee6102e9366004611e2a565b610711565b6040516101d796959493929190611ecb565b34801561030c57600080fd5b506103156107e1565b6040516101d79190611e7e565b34801561032e57600080fd5b506101cb61033d366004611e42565b600460209081526000928352604080842090915290825290205460ff1681565b34801561036957600080fd5b506101a9610378366004611e2a565b6108eb565b34801561038957600080fd5b506101a9610398366004611e2a565b610a6e565b3480156103a957600080fd5b5061025960055481565b3480156103bf57600080fd5b506101a96103ce366004611e64565b610bed565b3480156103df57600080fd5b506101a96103ee366004611c29565b610cdb565b3480156103ff57600080fd5b5061027c61040e366004611e2a565b6000908152600360208190526040909120015460ff1690565b34801561043357600080fd5b50610200610442366004611ab0565b63bc197c8160e01b98975050505050505050565b34801561046257600080fd5b506101cb6104713660046119a5565b610e65565b34801561048257600080fd5b506101a96104913660046119c6565b610e9d565b3480156104a257600080fd5b5060025460ff1661027c565b3480156104ba57600080fd5b506101cb6104c9366004611e2a565b611102565b3480156104da57600080fd5b506102006104e9366004611bb3565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630271189760e51b148061052c57506001600160e01b03198216630a85bd0160e11b145b8061054757506001600160e01b031982166301ffc9a760e01b145b92915050565b630a85bd0160e11b5b95945050505050565b60025462010000900460ff1661058057600254610100900460ff1615610584565b303b155b6105ec5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b60025462010000900460ff16158015610611576002805462ffff001916620101001790555b61061b8383611366565b801561062e576002805462ff0000191690555b505050565b6000805b6005548110156106b557838015610666575060008181526003602081905260409091200154610100900460ff16155b806106905750828015610690575060008181526003602081905260409091200154610100900460ff165b156106a3578161069f81612080565b9250505b806106ad81612080565b915050610637565b5092915050565b60006106ca60025460ff1690565b60009283526003602081905260409093209092015460ff92831692169190911015919050565b60006106fe858585856115f8565b905061070981610a6e565b949350505050565b60036020526000908152604090208054600182015460028301805460ff8416946101009094046001600160a01b031693919061074c90612045565b80601f016020809104026020016040519081016040528092919081815260200182805461077890612045565b80156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b5050506003909301549192505060ff8082169161010090041686565b6060600060015467ffffffffffffffff81111561080e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610837578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549192506001600160a01b03909116905b6001548110156108e357818382815181106108a157634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920181019190915292811660009081529283905260409092205490911690806108db81612080565b915050610876565b509092915050565b336108f581610e65565b6109115760405162461bcd60e51b81526004016105e390611f72565b60008281526004602090815260408083203380855292529091205483919060ff1661097e5760405162461bcd60e51b815260206004820152601f60248201527f6e6f74206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b600084815260036020819052604090912001548490610100900460ff16156109e25760405162461bcd60e51b81526020600482015260176024820152761d1c985b9cd858dd1a5bdb881a5cc8195e1958dd5d1959604a1b60448201526064016105e3565b6000858152600360208190526040822001805460ff1691610a0283612028565b825460ff9182166101009390930a9283029190920219909116179055506000858152600460209081526040808320338085529252808320805460ff191690555187927f3e776e19fc0f05c1b8270744b61c5729d5d1a5d8dded1bfb81e3979e257edd5991a35050505050565b33610a7881610e65565b610a945760405162461bcd60e51b81526004016105e390611f72565b816005548110610ae65760405162461bcd60e51b815260206004820152601860248201527f7472616e73616374696f6e206973206e6f74206578697374000000000000000060448201526064016105e3565b60008381526004602090815260408083203380855292529091205484919060ff1615610b545760405162461bcd60e51b815260206004820152601f60248201527f686173206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b6000858152600360208190526040822001805460ff1691610b748361209b565b825460ff9182166101009390930a9283029190920219909116179055506000858152600460209081526040808320338085529252808320805460ff191660011790555187927f7b19c08b12f940ea76949b68d355070966056a862ad2c1aa6676ecbcc9538a6191a3610be585611102565b505050505050565b610bf56117ac565b6001548160ff161115610c4a5760405162461bcd60e51b815260206004820152601d60248201527f7468726573686f6c64206973206d6f7265207468616e206f776e65727300000060448201526064016105e3565b60018160ff161015610c935760405162461bcd60e51b815260206004820152601260248201527130ba103632b0b9ba1037b7329037bbb732b960711b60448201526064016105e3565b6002805460ff191660ff83169081179091556040519081527fa1a39f4ff110596455f47a4a25db50c3662a86ffdb67875e4291c2efde959f1d9060200160405180910390a150565b610ce36117ac565b6001600160a01b03821615801590610d0457506001600160a01b0382163014155b8015610d1a57506001600160a01b038216600114155b610d625760405162461bcd60e51b81526020600482015260196024820152786e6f7420616c6c6f776564206f776e6572206164647265737360381b60448201526064016105e3565b6001600160a01b038281166000908152602081905260409020541615610d9a5760405162461bcd60e51b81526004016105e390611fa9565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03858116808552604085208054929093166001600160a01b03199283161790925560018085528354909116909117909155805491610e0883612080565b90915550506040516001600160a01b03831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a160025460ff828116911614610e6157610e6181610bed565b5050565b60006001600160a01b0382166001148015906105475750506001600160a01b0390811660009081526020819052604090205416151590565b610ea56117ac565b6001600160a01b03811615801590610ec657506001600160a01b0381163014155b8015610edc57506001600160a01b038116600114155b610f285760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e6577206f776e657220616464726573730000000000000060448201526064016105e3565b6001600160a01b038181166000908152602081905260409020541615610f605760405162461bcd60e51b81526004016105e390611fa9565b6001600160a01b03821615801590610f8257506001600160a01b038216600114155b610fce5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206f6c64206f776e657220616464726573730000000000000060448201526064016105e3565b6001600160a01b0383811660009081526020819052604090205481169083161461103a5760405162461bcd60e51b815260206004820152601e60248201527f6e6f7420636f72726573706f6e6420746f20746865206f6c644f776e6572000060448201526064016105e3565b6001600160a01b03828116600081815260208181526040808320805487871680865283862080549289166001600160a01b0319938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a16040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b60003361110e81610e65565b61112a5760405162461bcd60e51b81526004016105e390611f72565b60008381526004602090815260408083203380855292529091205484919060ff166111975760405162461bcd60e51b815260206004820152601f60248201527f6e6f74206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b600085815260036020819052604090912001548590610100900460ff16156111fb5760405162461bcd60e51b81526020600482015260176024820152761d1c985b9cd858dd1a5bdb881a5cc8195e1958dd5d1959604a1b60448201526064016105e3565b611204866106bc565b1561135d576000868152600360205260409020805460018201546002830180546112d99360ff8116936101009091046001600160a01b031692909161124890612045565b80601f016020809104026020016040519081016040528092919081815260200182805461127490612045565b80156112c15780601f10611296576101008083540402835291602001916112c1565b820191906000526020600020905b8154815290600101906020018083116112a457829003601f168201915b50505050506109c45a6112d49190612011565b6117f2565b955085156113225760038101805461ff00191661010017905560405187907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c790600090a261135b565b60038101805461ff001916905560405187907f492fd70ea712c765647b1676dbd9ea071e027174bc0cbbdb721f33658880271e90600090a25b505b50505050919050565b60025460ff16156113b95760405162461bcd60e51b815260206004820152601760248201527f63616e206f6e6c792062652063616c6c6564206f6e636500000000000000000060448201526064016105e3565b81518160ff16111561140d5760405162461bcd60e51b815260206004820152601d60248201527f7468726573686f6c64206973206d6f7265207468616e206f776e65727300000060448201526064016105e3565b60018160ff1610156114565760405162461bcd60e51b815260206004820152601260248201527130ba103632b0b9ba1037b7329037bbb732b960711b60448201526064016105e3565b600160005b83518110156115b157600084828151811061148657634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156114bc57506001600160a01b0381163014155b80156114da5750826001600160a01b0316816001600160a01b031614155b80156114f057506001600160a01b038116600114155b6115385760405162461bcd60e51b81526020600482015260196024820152786e6f7420616c6c6f776564206f776e6572206164647265737360381b60448201526064016105e3565b6001600160a01b0381811660009081526020819052604090205416156115705760405162461bcd60e51b81526004016105e390611fa9565b6001600160a01b03928316600090815260208190526040902080546001600160a01b03191693821693909317909255806115a981612080565b91505061145b565b506001600160a01b03166000908152602081905260409020805460016001600160a01b0319909116811790915591519091556002805460ff191660ff909216919091179055565b6000836001600160a01b0381166116515760405162461bcd60e51b815260206004820152601c60248201527f746869732061646472657373206973207a65726f20616464726573730000000060448201526064016105e3565b6005805490600061166183612080565b9190505591506040518060c0016040528087600181111561169257634e487b7160e01b600052602160045260246000fd5b81526001600160a01b03871660208083019190915260408083018890526060830187905260006080840181905260a09093018390528583526003909152902081518154829060ff1916600183818111156116fc57634e487b7160e01b600052602160045260246000fd5b021790555060208281015182546001600160a01b0390911661010002610100600160a81b031990911617825560408301516001830155606083015180516117499260028501920190611845565b5060808201516003909101805460a09093015115156101000261ffff1990931660ff9092169190911791909117905560405182907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d190600090a250949350505050565b3330146117f05760405162461bcd60e51b81526020600482015260126024820152711c995c5d5a5c9959081cd95b198818d85b1b60721b60448201526064016105e3565b565b60008086600181111561181557634e487b7160e01b600052602160045260246000fd5b141561182f57600080845160208601878987f19050610556565b6000808451602086018886f49695505050505050565b82805461185190612045565b90600052602060002090601f01602090048101928261187357600085556118b9565b82601f1061188c57805160ff19168380011785556118b9565b828001600101855582156118b9579182015b828111156118b957825182559160200191906001019061189e565b506118c59291506118c9565b5090565b5b808211156118c557600081556001016118ca565b80356001600160a01b03811681146118f557600080fd5b919050565b60008083601f84011261190b578182fd5b50813567ffffffffffffffff811115611922578182fd5b6020830191508360208260051b850101111561193d57600080fd5b9250929050565b803580151581146118f557600080fd5b60008083601f840112611965578182fd5b50813567ffffffffffffffff81111561197c578182fd5b60208301915083602082850101111561193d57600080fd5b803560ff811681146118f557600080fd5b6000602082840312156119b6578081fd5b6119bf826118de565b9392505050565b6000806000606084860312156119da578182fd5b6119e3846118de565b92506119f1602085016118de565b91506119ff604085016118de565b90509250925092565b60008060008060008060008060c0898b031215611a23578384fd5b611a2c896118de565b9750611a3a60208a016118de565b9650611a4860408a016118de565b955060608901359450608089013567ffffffffffffffff80821115611a6b578586fd5b611a778c838d01611954565b909650945060a08b0135915080821115611a8f578384fd5b50611a9c8b828c01611954565b999c989b5096995094979396929594505050565b60008060008060008060008060a0898b031215611acb578384fd5b611ad4896118de565b9750611ae260208a016118de565b9650604089013567ffffffffffffffff80821115611afe578586fd5b611b0a8c838d016118fa565b909850965060608b0135915080821115611b22578586fd5b611b2e8c838d016118fa565b909650945060808b0135915080821115611a8f578384fd5b600080600080600060808688031215611b5d578081fd5b611b66866118de565b9450611b74602087016118de565b935060408601359250606086013567ffffffffffffffff811115611b96578182fd5b611ba288828901611954565b969995985093965092949392505050565b60008060008060008060a08789031215611bcb578182fd5b611bd4876118de565b9550611be2602088016118de565b94506040870135935060608701359250608087013567ffffffffffffffff811115611c0b578283fd5b611c1789828a01611954565b979a9699509497509295939492505050565b60008060408385031215611c3b578182fd5b611c44836118de565b9150611c5260208401611994565b90509250929050565b60008060408385031215611c6d578182fd5b823567ffffffffffffffff80821115611c84578384fd5b818501915085601f830112611c97578384fd5b8135602082821115611cab57611cab6120d1565b8160051b9250611cbc818401611fe0565b8281528181019085830185870184018b1015611cd6578889fd5b8896505b84871015611cff57611ceb816118de565b835260019690960195918301918301611cda565b509650611d0f9050878201611994565b9450505050509250929050565b60008060408385031215611d2e578182fd5b611d3783611944565b9150611c5260208401611944565b600060208284031215611d56578081fd5b81356001600160e01b0319811681146119bf578182fd5b60008060008060808587031215611d82578182fd5b843560028110611d90578283fd5b93506020611d9f8682016118de565b935060408601359250606086013567ffffffffffffffff80821115611dc2578384fd5b818801915088601f830112611dd5578384fd5b813581811115611de757611de76120d1565b611df9601f8201601f19168501611fe0565b91508082528984828501011115611e0e578485fd5b8084840185840137810190920192909252939692955090935050565b600060208284031215611e3b578081fd5b5035919050565b60008060408385031215611e54578182fd5b82359150611c52602084016118de565b600060208284031215611e75578081fd5b6119bf82611994565b6020808252825182820181905260009190848201906040850190845b81811015611ebf5783516001600160a01b031683529284019291840191600101611e9a565b50909695505050505050565b600060028810611ee957634e487b7160e01b81526021600452602481fd5b878252602060018060a01b0388168184015286604084015260c0606084015285518060c0850152825b81811015611f2e5787810183015185820160e001528201611f12565b81811115611f3f578360e083870101525b50601f01601f1916830160e0019150611f5f9050608083018560ff169052565b82151560a0830152979650505050505050565b60208082526018908201527f6973206e6f74206f6e65206f6620746865206f776e6572730000000000000000604082015260600190565b60208082526017908201527f6475706c6963617465206f776e65722061646472657373000000000000000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612009576120096120d1565b604052919050565b600082821015612023576120236120bb565b500390565b600060ff82168061203b5761203b6120bb565b6000190192915050565b600181811c9082168061205957607f821691505b6020821081141561207a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612094576120946120bb565b5060010190565b600060ff821660ff8114156120b2576120b26120bb565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206fbbdfbbc795f3a2d4059114ebf4ea4ffbe0204f9bf46944fe1604bb09ee272f64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106101435760003560e01c8063b1e130fc116100b6578063bc197c811161006f578063bc197c8114610427578063e0e3671c14610456578063e318b52b14610476578063e75235b814610496578063ee22610b146104ae578063f23a6e61146104ce57600080fd5b8063b1e130fc1461035d578063b759f9541461037d578063b77bf6001461039d578063b7f3358d146103b3578063b91a667f146103d3578063ba7e7cab146103f357600080fd5b806372688111116101085780637268811114610267578063784547a71461028e5780638dbcc2e0146102ae5780639ace38c2146102ce578063a0e67e2b14610300578063ab2850da1461032257600080fd5b806223de291461018457806301ffc9a7146101ab578063150b7a02146101e05780632bbdea4e14610219578063547415251461023957600080fd5b3661017f5760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b34801561019057600080fd5b506101a961019f366004611a08565b5050505050505050565b005b3480156101b757600080fd5b506101cb6101c6366004611d45565b6104fb565b60405190151581526020015b60405180910390f35b3480156101ec57600080fd5b506102006101fb366004611b46565b61054d565b6040516001600160e01b031990911681526020016101d7565b34801561022557600080fd5b506101a9610234366004611c5b565b61055f565b34801561024557600080fd5b50610259610254366004611d1c565b610633565b6040519081526020016101d7565b34801561027357600080fd5b5061027c603281565b60405160ff90911681526020016101d7565b34801561029a57600080fd5b506101cb6102a9366004611e2a565b6106bc565b3480156102ba57600080fd5b506102596102c9366004611d6d565b6106f0565b3480156102da57600080fd5b506102ee6102e9366004611e2a565b610711565b6040516101d796959493929190611ecb565b34801561030c57600080fd5b506103156107e1565b6040516101d79190611e7e565b34801561032e57600080fd5b506101cb61033d366004611e42565b600460209081526000928352604080842090915290825290205460ff1681565b34801561036957600080fd5b506101a9610378366004611e2a565b6108eb565b34801561038957600080fd5b506101a9610398366004611e2a565b610a6e565b3480156103a957600080fd5b5061025960055481565b3480156103bf57600080fd5b506101a96103ce366004611e64565b610bed565b3480156103df57600080fd5b506101a96103ee366004611c29565b610cdb565b3480156103ff57600080fd5b5061027c61040e366004611e2a565b6000908152600360208190526040909120015460ff1690565b34801561043357600080fd5b50610200610442366004611ab0565b63bc197c8160e01b98975050505050505050565b34801561046257600080fd5b506101cb6104713660046119a5565b610e65565b34801561048257600080fd5b506101a96104913660046119c6565b610e9d565b3480156104a257600080fd5b5060025460ff1661027c565b3480156104ba57600080fd5b506101cb6104c9366004611e2a565b611102565b3480156104da57600080fd5b506102006104e9366004611bb3565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630271189760e51b148061052c57506001600160e01b03198216630a85bd0160e11b145b8061054757506001600160e01b031982166301ffc9a760e01b145b92915050565b630a85bd0160e11b5b95945050505050565b60025462010000900460ff1661058057600254610100900460ff1615610584565b303b155b6105ec5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b60025462010000900460ff16158015610611576002805462ffff001916620101001790555b61061b8383611366565b801561062e576002805462ff0000191690555b505050565b6000805b6005548110156106b557838015610666575060008181526003602081905260409091200154610100900460ff16155b806106905750828015610690575060008181526003602081905260409091200154610100900460ff165b156106a3578161069f81612080565b9250505b806106ad81612080565b915050610637565b5092915050565b60006106ca60025460ff1690565b60009283526003602081905260409093209092015460ff92831692169190911015919050565b60006106fe858585856115f8565b905061070981610a6e565b949350505050565b60036020526000908152604090208054600182015460028301805460ff8416946101009094046001600160a01b031693919061074c90612045565b80601f016020809104026020016040519081016040528092919081815260200182805461077890612045565b80156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b5050506003909301549192505060ff8082169161010090041686565b6060600060015467ffffffffffffffff81111561080e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610837578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d549192506001600160a01b03909116905b6001548110156108e357818382815181106108a157634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920181019190915292811660009081529283905260409092205490911690806108db81612080565b915050610876565b509092915050565b336108f581610e65565b6109115760405162461bcd60e51b81526004016105e390611f72565b60008281526004602090815260408083203380855292529091205483919060ff1661097e5760405162461bcd60e51b815260206004820152601f60248201527f6e6f74206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b600084815260036020819052604090912001548490610100900460ff16156109e25760405162461bcd60e51b81526020600482015260176024820152761d1c985b9cd858dd1a5bdb881a5cc8195e1958dd5d1959604a1b60448201526064016105e3565b6000858152600360208190526040822001805460ff1691610a0283612028565b825460ff9182166101009390930a9283029190920219909116179055506000858152600460209081526040808320338085529252808320805460ff191690555187927f3e776e19fc0f05c1b8270744b61c5729d5d1a5d8dded1bfb81e3979e257edd5991a35050505050565b33610a7881610e65565b610a945760405162461bcd60e51b81526004016105e390611f72565b816005548110610ae65760405162461bcd60e51b815260206004820152601860248201527f7472616e73616374696f6e206973206e6f74206578697374000000000000000060448201526064016105e3565b60008381526004602090815260408083203380855292529091205484919060ff1615610b545760405162461bcd60e51b815260206004820152601f60248201527f686173206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b6000858152600360208190526040822001805460ff1691610b748361209b565b825460ff9182166101009390930a9283029190920219909116179055506000858152600460209081526040808320338085529252808320805460ff191660011790555187927f7b19c08b12f940ea76949b68d355070966056a862ad2c1aa6676ecbcc9538a6191a3610be585611102565b505050505050565b610bf56117ac565b6001548160ff161115610c4a5760405162461bcd60e51b815260206004820152601d60248201527f7468726573686f6c64206973206d6f7265207468616e206f776e65727300000060448201526064016105e3565b60018160ff161015610c935760405162461bcd60e51b815260206004820152601260248201527130ba103632b0b9ba1037b7329037bbb732b960711b60448201526064016105e3565b6002805460ff191660ff83169081179091556040519081527fa1a39f4ff110596455f47a4a25db50c3662a86ffdb67875e4291c2efde959f1d9060200160405180910390a150565b610ce36117ac565b6001600160a01b03821615801590610d0457506001600160a01b0382163014155b8015610d1a57506001600160a01b038216600114155b610d625760405162461bcd60e51b81526020600482015260196024820152786e6f7420616c6c6f776564206f776e6572206164647265737360381b60448201526064016105e3565b6001600160a01b038281166000908152602081905260409020541615610d9a5760405162461bcd60e51b81526004016105e390611fa9565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03858116808552604085208054929093166001600160a01b03199283161790925560018085528354909116909117909155805491610e0883612080565b90915550506040516001600160a01b03831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a160025460ff828116911614610e6157610e6181610bed565b5050565b60006001600160a01b0382166001148015906105475750506001600160a01b0390811660009081526020819052604090205416151590565b610ea56117ac565b6001600160a01b03811615801590610ec657506001600160a01b0381163014155b8015610edc57506001600160a01b038116600114155b610f285760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e6577206f776e657220616464726573730000000000000060448201526064016105e3565b6001600160a01b038181166000908152602081905260409020541615610f605760405162461bcd60e51b81526004016105e390611fa9565b6001600160a01b03821615801590610f8257506001600160a01b038216600114155b610fce5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206f6c64206f776e657220616464726573730000000000000060448201526064016105e3565b6001600160a01b0383811660009081526020819052604090205481169083161461103a5760405162461bcd60e51b815260206004820152601e60248201527f6e6f7420636f72726573706f6e6420746f20746865206f6c644f776e6572000060448201526064016105e3565b6001600160a01b03828116600081815260208181526040808320805487871680865283862080549289166001600160a01b0319938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a16040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b60003361110e81610e65565b61112a5760405162461bcd60e51b81526004016105e390611f72565b60008381526004602090815260408083203380855292529091205484919060ff166111975760405162461bcd60e51b815260206004820152601f60248201527f6e6f74206265656e20617070726f7665642062792074686973206f776e65720060448201526064016105e3565b600085815260036020819052604090912001548590610100900460ff16156111fb5760405162461bcd60e51b81526020600482015260176024820152761d1c985b9cd858dd1a5bdb881a5cc8195e1958dd5d1959604a1b60448201526064016105e3565b611204866106bc565b1561135d576000868152600360205260409020805460018201546002830180546112d99360ff8116936101009091046001600160a01b031692909161124890612045565b80601f016020809104026020016040519081016040528092919081815260200182805461127490612045565b80156112c15780601f10611296576101008083540402835291602001916112c1565b820191906000526020600020905b8154815290600101906020018083116112a457829003601f168201915b50505050506109c45a6112d49190612011565b6117f2565b955085156113225760038101805461ff00191661010017905560405187907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c790600090a261135b565b60038101805461ff001916905560405187907f492fd70ea712c765647b1676dbd9ea071e027174bc0cbbdb721f33658880271e90600090a25b505b50505050919050565b60025460ff16156113b95760405162461bcd60e51b815260206004820152601760248201527f63616e206f6e6c792062652063616c6c6564206f6e636500000000000000000060448201526064016105e3565b81518160ff16111561140d5760405162461bcd60e51b815260206004820152601d60248201527f7468726573686f6c64206973206d6f7265207468616e206f776e65727300000060448201526064016105e3565b60018160ff1610156114565760405162461bcd60e51b815260206004820152601260248201527130ba103632b0b9ba1037b7329037bbb732b960711b60448201526064016105e3565b600160005b83518110156115b157600084828151811061148657634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156114bc57506001600160a01b0381163014155b80156114da5750826001600160a01b0316816001600160a01b031614155b80156114f057506001600160a01b038116600114155b6115385760405162461bcd60e51b81526020600482015260196024820152786e6f7420616c6c6f776564206f776e6572206164647265737360381b60448201526064016105e3565b6001600160a01b0381811660009081526020819052604090205416156115705760405162461bcd60e51b81526004016105e390611fa9565b6001600160a01b03928316600090815260208190526040902080546001600160a01b03191693821693909317909255806115a981612080565b91505061145b565b506001600160a01b03166000908152602081905260409020805460016001600160a01b0319909116811790915591519091556002805460ff191660ff909216919091179055565b6000836001600160a01b0381166116515760405162461bcd60e51b815260206004820152601c60248201527f746869732061646472657373206973207a65726f20616464726573730000000060448201526064016105e3565b6005805490600061166183612080565b9190505591506040518060c0016040528087600181111561169257634e487b7160e01b600052602160045260246000fd5b81526001600160a01b03871660208083019190915260408083018890526060830187905260006080840181905260a09093018390528583526003909152902081518154829060ff1916600183818111156116fc57634e487b7160e01b600052602160045260246000fd5b021790555060208281015182546001600160a01b0390911661010002610100600160a81b031990911617825560408301516001830155606083015180516117499260028501920190611845565b5060808201516003909101805460a09093015115156101000261ffff1990931660ff9092169190911791909117905560405182907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d190600090a250949350505050565b3330146117f05760405162461bcd60e51b81526020600482015260126024820152711c995c5d5a5c9959081cd95b198818d85b1b60721b60448201526064016105e3565b565b60008086600181111561181557634e487b7160e01b600052602160045260246000fd5b141561182f57600080845160208601878987f19050610556565b6000808451602086018886f49695505050505050565b82805461185190612045565b90600052602060002090601f01602090048101928261187357600085556118b9565b82601f1061188c57805160ff19168380011785556118b9565b828001600101855582156118b9579182015b828111156118b957825182559160200191906001019061189e565b506118c59291506118c9565b5090565b5b808211156118c557600081556001016118ca565b80356001600160a01b03811681146118f557600080fd5b919050565b60008083601f84011261190b578182fd5b50813567ffffffffffffffff811115611922578182fd5b6020830191508360208260051b850101111561193d57600080fd5b9250929050565b803580151581146118f557600080fd5b60008083601f840112611965578182fd5b50813567ffffffffffffffff81111561197c578182fd5b60208301915083602082850101111561193d57600080fd5b803560ff811681146118f557600080fd5b6000602082840312156119b6578081fd5b6119bf826118de565b9392505050565b6000806000606084860312156119da578182fd5b6119e3846118de565b92506119f1602085016118de565b91506119ff604085016118de565b90509250925092565b60008060008060008060008060c0898b031215611a23578384fd5b611a2c896118de565b9750611a3a60208a016118de565b9650611a4860408a016118de565b955060608901359450608089013567ffffffffffffffff80821115611a6b578586fd5b611a778c838d01611954565b909650945060a08b0135915080821115611a8f578384fd5b50611a9c8b828c01611954565b999c989b5096995094979396929594505050565b60008060008060008060008060a0898b031215611acb578384fd5b611ad4896118de565b9750611ae260208a016118de565b9650604089013567ffffffffffffffff80821115611afe578586fd5b611b0a8c838d016118fa565b909850965060608b0135915080821115611b22578586fd5b611b2e8c838d016118fa565b909650945060808b0135915080821115611a8f578384fd5b600080600080600060808688031215611b5d578081fd5b611b66866118de565b9450611b74602087016118de565b935060408601359250606086013567ffffffffffffffff811115611b96578182fd5b611ba288828901611954565b969995985093965092949392505050565b60008060008060008060a08789031215611bcb578182fd5b611bd4876118de565b9550611be2602088016118de565b94506040870135935060608701359250608087013567ffffffffffffffff811115611c0b578283fd5b611c1789828a01611954565b979a9699509497509295939492505050565b60008060408385031215611c3b578182fd5b611c44836118de565b9150611c5260208401611994565b90509250929050565b60008060408385031215611c6d578182fd5b823567ffffffffffffffff80821115611c84578384fd5b818501915085601f830112611c97578384fd5b8135602082821115611cab57611cab6120d1565b8160051b9250611cbc818401611fe0565b8281528181019085830185870184018b1015611cd6578889fd5b8896505b84871015611cff57611ceb816118de565b835260019690960195918301918301611cda565b509650611d0f9050878201611994565b9450505050509250929050565b60008060408385031215611d2e578182fd5b611d3783611944565b9150611c5260208401611944565b600060208284031215611d56578081fd5b81356001600160e01b0319811681146119bf578182fd5b60008060008060808587031215611d82578182fd5b843560028110611d90578283fd5b93506020611d9f8682016118de565b935060408601359250606086013567ffffffffffffffff80821115611dc2578384fd5b818801915088601f830112611dd5578384fd5b813581811115611de757611de76120d1565b611df9601f8201601f19168501611fe0565b91508082528984828501011115611e0e578485fd5b8084840185840137810190920192909252939692955090935050565b600060208284031215611e3b578081fd5b5035919050565b60008060408385031215611e54578182fd5b82359150611c52602084016118de565b600060208284031215611e75578081fd5b6119bf82611994565b6020808252825182820181905260009190848201906040850190845b81811015611ebf5783516001600160a01b031683529284019291840191600101611e9a565b50909695505050505050565b600060028810611ee957634e487b7160e01b81526021600452602481fd5b878252602060018060a01b0388168184015286604084015260c0606084015285518060c0850152825b81811015611f2e5787810183015185820160e001528201611f12565b81811115611f3f578360e083870101525b50601f01601f1916830160e0019150611f5f9050608083018560ff169052565b82151560a0830152979650505050505050565b60208082526018908201527f6973206e6f74206f6e65206f6620746865206f776e6572730000000000000000604082015260600190565b60208082526017908201527f6475706c6963617465206f776e65722061646472657373000000000000000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612009576120096120d1565b604052919050565b600082821015612023576120236120bb565b500390565b600060ff82168061203b5761203b6120bb565b6000190192915050565b600181811c9082168061205957607f821691505b6020821081141561207a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612094576120946120bb565b5060010190565b600060ff821660ff8114156120b2576120b26120bb565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206fbbdfbbc795f3a2d4059114ebf4ea4ffbe0204f9bf46944fe1604bb09ee272f64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(uint256)": {
        "details": "Allows an owner to approve a transaction.",
        "params": {
          "_txnId": "transaction ID."
        }
      },
      "executeTransaction(uint256)": {
        "details": "Allows anyone to execute a approved transaction.",
        "params": {
          "_txnId": "transaction ID."
        },
        "returns": {
          "success": "wether it's success"
        }
      },
      "getApprovalCount(uint256)": {
        "details": "Returns number of approvals of a transaction.",
        "params": {
          "_txnId": "transaction ID."
        },
        "returns": {
          "count": "Number of approvals."
        }
      },
      "getTransactionCount(bool,bool)": {
        "details": "Returns total number of transactions which filers are applied.",
        "params": {
          "_executed": "Include executed transactions.",
          "_pending": "Include pending transactions."
        },
        "returns": {
          "count": "Total number of transactions after filters are applied."
        }
      },
      "initialize(address[],uint8)": {
        "details": "sets initial owners and required number of confirmations.",
        "params": {
          "_owners": "List of initial owners.",
          "_required": "Number of required confirmations."
        }
      },
      "isConfirmed(uint256)": {
        "details": "Returns the confirmation status of a transaction.",
        "params": {
          "_txnId": "transaction ID."
        },
        "returns": {
          "status": "confirmation status."
        }
      },
      "revokeApproval(uint256)": {
        "details": "Allows an owner to revoke a approval for a transaction.",
        "params": {
          "_txnId": "transaction ID."
        }
      },
      "submitTransaction(uint8,address,uint256,bytes)": {
        "details": "Allows an owner to submit and approve a transaction.",
        "params": {
          "data": "transaction data payload.",
          "operation": "external call operation",
          "target": "transaction destination address",
          "value": "transaction value in Wei."
        },
        "returns": {
          "txnId": "returns transaction ID."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "title": "Multisignature wallet - Allows multiple parties to agree on transactions before execution.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3314,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "owners",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 3316,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "ownerCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3318,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "threshold",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 679,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "_initialized",
        "offset": 1,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 682,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "_initializing",
        "offset": 2,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 1284,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Transaction)1276_storage)"
      },
      {
        "astId": 1290,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "approvals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 1292,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactionCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(Operation)4365": {
        "encoding": "inplace",
        "label": "enum Types.Operation",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Transaction)1276_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct MultiSigWallet.Transaction)",
        "numberOfBytes": "32",
        "value": "t_struct(Transaction)1276_storage"
      },
      "t_struct(Transaction)1276_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 1265,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "operation",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Operation)4365"
          },
          {
            "astId": 1267,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "target",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1269,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1271,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 1273,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "approval",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 1275,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}